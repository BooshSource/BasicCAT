Sub preTranslateViaNetwork(options As Map)
	
	If options.Get("type")="TM" Then
		maxRequest=0
		completed=0
		Dim index As Int=-1
		preTrasnlateProgressDialog.Show(3)
		
		For Each bitext As List In segments
			index=index+1
			Dim target As String
			target=bitext.Get(1)
			If target<>"" Then
				completed=completed+1
				preTrasnlateProgressDialog.update(completed,segments.Size)
				Continue
			End If
			Do While maxRequest>=10
				Sleep(1000)
			Loop
			maxRequest=maxRequest+1
			getOneMatch(bitext.Get(0),index,options.Get("rate"))
		Next

		Do While completed<>segments.size
			Sleep(1000)
		Loop
		preTrasnlateProgressDialog.close
		fillVisibleTargetTextArea
	End If
End Sub

'Good example. Use.
Sub getOneMatch(source As String, index As Int,matchRate As Double)
	Dim job As HttpJob
	job.Initialize("job",Me)
	job.Download2("http://127.0.0.1:51041/getOneMatch",Array As String("source",source,"path",path,"index",index,"matchrate",matchRate))
				
	Wait For (job) JobDone(job As HttpJob)
	completed=completed+1
	If job.Success Then
		Log("job")
		Dim json As JSONParser
		json.Initialize(job.GetString)
		Dim result As List
		result=json.NextArray
		maxRequest=maxRequest-1
		Dim completedIndex As Int
		completedIndex=result.Get(4)
		Dim similarity As Double
		similarity=result.Get(0)
		Dim bitext As List
		bitext=segments.Get(completedIndex)
		Log(bitext.Get(0))
		Log(similarity)
		Log(matchRate)
		Log(similarity>=matchRate)
		If similarity>=matchRate Then
			bitext.Set(1,result.Get(2))
			segments.Set(completedIndex,bitext)
		End If
		preTrasnlateProgressDialog.update(completed,segments.Size)
	End If
	job.Release
	
End Sub

Sub showTM2(targetTextArea As TextArea)
	Dim pane As Pane
	pane=targetTextArea.Parent
	Dim sourceTA As TextArea
	sourceTA=pane.GetNode(0)
	If projectTM.currentSource=sourceTA.Text Then
		Return
	End If
	projectTM.currentSource=sourceTA.Text
	Main.tmTableView.Items.Clear
	Dim job As HttpJob
	job.Initialize("job",Me)
	job.Download2("http://127.0.0.1:51041/getMatchList",Array As String("source",sourceTA.Text,"path",path))
	Wait For (job) JobDone(job As HttpJob)
	If job.Success Then
		Log("job")
		Main.tmTableView.Items.Clear
		Dim json As JSONParser
		json.Initialize(job.GetString)
		Dim result As List
		result=json.NextArray
		For Each matchList As List In result
			Dim row()  As Object = Array As String(matchList.Get(0),matchList.Get(1),matchList.Get(2),matchList.Get(3))
			Main.tmTableView.Items.Add(row)
		Next
	End If
	job.Release
End Sub
