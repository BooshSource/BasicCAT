	Private maxRequest As Int=0
	Private completed As Int=0

Sub getMatchListViaNetwork(source As String) As ResumableSub
	completed=0
	maxRequest=0
	Dim matchList As List
	matchList.Initialize
	Log(source&" ss")
	For i=0 To 1
		If i=0 Then
			Dim kvs As KeyValueStore
			kvs=translationMemory
		Else
			Dim kvs As KeyValueStore
			kvs=externalTranslationMemory
		End If
		For Each key As String In kvs.ListKeys
			'Sleep(0)
			If basicCompare(source,key)=False Then
				completed=completed+1
				Continue
			End If
			Dim pairList As List
			pairList.Initialize
			pairList.Add(source)
			pairList.Add(key) ' two sourcelanguage sentences
			Dim json As JSONGenerator
			json.Initialize2(pairList)
			Dim similarity As Double
			If similarityResult.ContainsKey(json.ToString) Then
				similarity=similarityResult.Get(json.ToString)
				If similarity>0.5 Then
					Dim tmPairList As List
					tmPairList.Initialize
					tmPairList.Add(similarity)
					tmPairList.Add(key)
				
					If i=0 Then
						tmPairList.Add(kvs.Get(key))
						tmPairList.Add("")
					Else
						Dim targetList As List
						targetList=kvs.Get(key)
						tmPairList.Add(targetList.Get(0))
						tmPairList.Add(targetList.Get(1))
					End If
					matchList.Add(tmPairList)
				End If
				completed=completed+1
			Else
				Dim note As String
				If i=0 Then
					note=""
				Else
					note=targetList.Get(1)
				End If
				
				Do While maxRequest>=8
					Sleep(200)
				Loop
				maxRequest=maxRequest+1

				getSimilarityViaNetwork(source,key,kvs.Get(key),note,matchList)
			End If
		Next
	Next
	Do While completed<translationMemory.ListKeys.Size+externalTranslationMemory.ListKeys.Size
		Log(completed)
		Log(translationMemory.ListKeys.Size+externalTranslationMemory.ListKeys.Size)
		Sleep(1000)
	Loop
	Log(matchList)
	Return subtractedAndSortMatchList(matchList)
End Sub

Sub getSimilarityViaNetwork(source As String,key As String,target As String,note As String,matchlist As List)
	Dim job As HttpJob
	job.Initialize("job",Me)
	job.Download2("http://127.0.0.1:51041/getSimilarity",Array As String("str1",source,"str2",key,"note",note,"target",target))
	Dim similarity As Double
	wait For (job) JobDone(job As HttpJob)
	completed=completed+1
	maxRequest=maxRequest-1
	If job.Success Then
		Log("job")
		Dim jsonp As JSONParser
		jsonp.Initialize(job.GetString)
		Dim resultList As List
		resultList=jsonp.NextArray
		similarity=resultList.Get(0)
		Log(similarity)
		If similarity>0.5 Then
			matchlist.Add(resultList)
		End If
	End If
	job.Release
End Sub